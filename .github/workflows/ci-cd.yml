name: Test, Build & Deploy
on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Rust Cache
      uses: Swatinem/rust-cache@v1

    - name: Run Cargo Test
      run: cargo test
      env:
        GIT_SHA: ${{ github.sha }}

    - name: Run Helm Lint
      run: helm lint
      working-directory: "helm/code-challenge"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
    
    - name: Run Terraform Format Check 
      run: terraform fmt -check
      working-directory: "deploy"
    
    - name: Run Terraform Validate
      run: terraform validate
      working-directory: "deploy"

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & Push Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          ghcr.io/itsbalamurali/code-challenge:${{ github.sha }}
          ghcr.io/itsbalamurali/code-challenge:latest
        build-args: GIT_SHA=${{ github.sha }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Install Kind
      run: |
          curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.11.1/kind-linux-amd64
          chmod +x kind
          sudo mv kind /usr/local/bin/

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Create Kubernetes Cluster
      run: kind create cluster
    
    - name: Get Cluster Info
      run: kubectl cluster-info

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v2.1

    - name: Install Helm
      uses: azure/setup-helm@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Deploy Production Helm Chart
      if: github.ref == 'refs/heads/main'
      run: helm upgrade --install code-challenge . --set image.tag=${{ github.sha }}
      working-directory: "helm/code-challenge"